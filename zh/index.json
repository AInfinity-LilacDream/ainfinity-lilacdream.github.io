[{"content":"\r最近课设需求需要将一个开源项目从Vue2升级到Vue3。项目规模不小，有许多依赖需要连带着升级。花费了我不少力气，以后大概是不想从头搞第二遍了。但是也权写一篇文章来记录一下踩过的坑。\n升级vue2项目的过程，大概可以被高度概括成这样：首先将Vue2版本升级到Vue3，（连带router之类的组件一起更新），然后得到了一个存放着vue2代码的vue3项目，之后配置@vue/compat，这个库可以使得vue3兼容大部分vue2的写法。随后，查询一些主要第三方库是否需要更新（Vuetify，Vant，Element UI等），并且更新之。在这个过程中有错误就逐步排，在项目跑通之后，从语法层面将Vue2语法逐个替换成Vue3语法，必要时候进行重构。最后，若能完全迁移至Vue3，可以删除过渡版本。若不能则只能依赖过渡版本运行（过时的不再受支持的第三方库等）。\n一、更新框架 先后尝试过手动更新，gogocode，ncu三种方法。手动更新太过于繁琐，gogocode的实际使用体验非常不好，尤其是你对于开源项目并不熟悉的情况下。最终是使用了ncu更新结合部分手动更新的方法来升级项目。\n以下是一些主要的库的大版本迭代：\nvant: 由于版本迁移更新的内容较大，需要引入@vant/compat来过渡。\nvuetify: 更新到vuetify 3的过程中，vuetify loader被重命名为webpack-plugin-vuetify。此外，需要将babel-eslint插件迭代为@babel/eslint-parser以防止eslint误报。\npostcss-px-to-viewport插件迭代为postcss-px-to-viewport-8-plugin。在postcss.config.js中需要进行相应的修改。\n需要注意的是，eslint的某些插件并不兼容eslint本身的最新版本。笔者由于插件冲突被迫在将eslint升级至9.x版本后又降级为^8.57.1版本。需要灵活决定。\n其余插件的变化不大。这里介绍一下ncu工具：\n首先，安装ncu。\n1 npm install -g ncu 随后，直接输入ncu并回车：\n1 ncu 随后，ncu会依次列出可以更新的插件的最新版本。请注意，这些最新版本之间可能有冲突，所以可能需要你再次手动调整。你应该得到类似于下图的输出：\n输入ncu -u，ncu将会自动更新package.json：\n1 ncu -u 随后，使用npm install来安装新版本的依赖。\n二、迁移语法 事实上需要迁移的项目可能会非常多，例如这个项目中，Vant组件库的大变动，Vuetify组件库的大变动，以及vue本身的语法变动，使得需要迁移的语法多而且繁，需要去对应的官网上找migration guide，然后一个一个去比对去改。此外，网上有很多博客，可以去搜搜看，能让你的比对范围变小一点。\n迁移的过程中，在语法问题之外，可能会需要把eslint的规则也配置一下。如果你一并将eslint升级到对应版本，一般来讲在rule里配置或者加行注都是可以的、如果你忘了升级可能会一直报类似MODULE not found之类的错误。\nMODULE_xxx not found的错误一般来讲，要么是eslint没更新，要么是你的组件语法还没完全改完。等到可以正常跑通之后，你就可以再对程序进行改动。一般来讲，UI库更新很可能会伴随着很多外观方面的改动，所以这样的项目要期盼完全与升级前的项目一致是不现实也不明智的。我们只需要让升级后的项目布局顺眼就可以。\n还碰到一个奇葩需求，让我们把Vuetify从项目中完全砍掉。这个挺难的，因为Vuetify和项目的耦合性有点太高了，里面甚至还有很多class是直接从vuetify.min.css里面引的，这一个一个去找太麻烦了，遂沟通之后放弃。\n","permalink":"https://ainfinity-lilacdream.github.io/zh/posts/wondering/migrating-vue-from-2-to-3/","summary":"\u003c!-- more --\u003e\r\n\u003cp\u003e最近课设需求需要将一个开源项目从Vue2升级到Vue3。项目规模不小，有许多依赖需要连带着升级。花费了我不少力气，以后大概是不想从头搞第二遍了。但是也权写一篇文章来记录一下踩过的坑。\u003c/p\u003e","title":"将项目从Vue2迁移至Vue3"},{"content":"\r零 · 前言 这是我的第一篇博客。因为学着搭建博客的时候踩了太多坑，特此来记录一下，尽可能清晰，也给后来人一个参考。\n如标题，博客采用Hugo+PaperMod+github pages搭建。下面我将分步记录搭建过程，以及一些踩过的坑。\n在正式开始搭建之前，你需要：\n安装至少一个包管理器。npm, chocolatey等均可。 拥有一个github账户，在电脑上安装了git。若git clone时出现网络问题，请尝试科学上网。 拥有一个个人域名，这里推荐腾讯云或阿里云备案，大厂有保障。 一 · Hugo-extended的安装 Hugo安装指南：https://gohugo.io/installation/windows/\nHugo官方入门指南：https://hugo.opendocs.io/getting-started/\n首先，在一个合适的位置新建一个文件夹，用于存放你的博客文件。进入你建好的文件夹，点击上方的路径栏\n输入cmd，在当前路径下打开cmd。\nHugo现有三个发行版本：standard, extended, extended/deploy. 官方推荐我们直接安装hugo-extended。此处使用npm命令，其他包管理器同理。\n1 npm install hugo-extended 这个命令将会在当前目录下安装hugo-extended。安装完后，会多出一个node_modules目录和package.json文件。这些是必要的依赖包，我们可以不用管。\n随后，检查hugo-extended是否正确安装。\n出现如图所示版本号则已正确安装。\n二 · 建立博客目录 / 应用PaperMod主题 PaperMod官方Wiki：https://github.com/adityatelange/hugo-PaperMod/wiki\n在当前目录新建一个hugo博客目录。\n1 hugo new site blog --format yaml 进入刚创建的文件夹：\n1 cd blog 初始化git仓库：\n1 git init 随后，使用github submodule安装PaperMod主题：\n1 2 git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod git submodule update --init --recursive 至此，你已经初始化好了PaperMod主题。你可以通过下列命令预览并调试你的网站：\n1 hugo server 在PaperMod刚安装好时，网站是空白的。这是因为，PaperMod是一个高度定制化的主题，我们需要进行个性化配置，才能让网站显示出内容。下面将进行网站主题的配置。\n三 · 配置PaperMod 参考文档：田少晗的个人博客 | PaperMod主题配置\n1. 配置hugo.yaml hugo的全局配置的文件在各个版本中文件名不同。在作者的hugo-extended版本中（hugo v0.144.2），依照上述命令创建的配置文件名为hugo.yaml。采用yaml格式是因为yaml格式更易读懂（对于作者而言是这样）。以下为作者的初始hugo.yaml配置，你可以依据自己的需求个性化修改。\nPaperMod官方Wiki给出了一些可用的Feature列表：https://github.com/adityatelange/hugo-PaperMod/wiki/Features\nhugo.yaml baseURL: \u0026#34;https://ainfinity-lilacdream.github.io\u0026#34; # 绑定的域名 title: AInfinity的博客 pagination.pagerSize: 10 # 首页每页显示的文章数 theme: PaperMod # 主题名称，和themes文件夹下的一致 languageCode: zh-cn # en-us hasCJKLanguage: true # 自动检测是否包含中文日文韩文,如果文章中使用了很多中文引号的话可以开启 enableInlineShortcodes: true enableEmoji: true # 允许使用 Emoji 表情，建议 true enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false enableEmoji: true pygmentsUseClasses: true # googleAnalytics: UA-123-45 minify: disableXML: true # minifyOutput: true permalinks: post: \u0026#34;/:title/\u0026#34; # post: \u0026#34;/:year/:month/:day/:title/\u0026#34; defaultContentLanguage: zh # 最顶部首先展示的语言页面 defaultContentLanguageInSubdir: true languages: zh: languageName: \u0026#34;Chinese\u0026#34; # contentDir: content/english weight: 1 menu: main: - identifier: search name: 搜索 url: search weight: 1 - identifier: home name: 主页 url: / weight: 2 - identifier: posts name: 文章 url: /posts weight: 3 - identifier: archives name: 时间轴 url: /archives weight: 20 # - identifier: categories # name: 分类 # url: categories # weight: 30 - identifier: tags name: 标签 url: /tags weight: 40 - identifier: about name: 关于 url: /about weight: 50 # - identifier: links # name: 友链 # url: links # weight: 60 outputs: home: - HTML - RSS - JSON params: env: production # to enable google analytics, opengraph, twitter-cards and schema. description: \u0026#34;AInfinity\u0026#39;s personal blog\u0026#34; author: AInfinity ShowCodeCopyButtons: true # author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors profileMode: enabled: true title: AInfinity 的个人博客 subtitle: \u0026#34;-- A coder\u0026#39;s fantasy --\u0026#34; imageUrl: \u0026#34;https://img.picui.cn/free/2025/02/24/67bc9054da588.jpg\u0026#34; imageTitle: Profile imageWidth: 150 imageHeight: 150 buttons: - name: 👨🏻‍💻技术 url: posts/tech - name: 📕阅读 url: posts/read - name: 🏖生活 url: posts/life defaultTheme: light # defaultTheme: light or dark disableThemeToggle: false DateFormat: \u0026#34;2006-01-02\u0026#34; ShowShareButtons: true ShowReadingTime: true # disableSpecialistPost: true displayFullLangName: true ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: true hideFooter: false # 隐藏页脚 ShowWordCounts: true VisitCount: true ShowLastMod: true #显示文章更新时间 ShowToc: true # 显示目录 TocOpen: true # 自动展开目录 comments: true socialIcons: - name: github url: \u0026#34;https://github.com/AInfinity-LilacDream\u0026#34; # - name: twitter # url: \u0026#34;img/twitter.png\u0026#34; - name: bilibili url: \u0026#34;https://space.bilibili.com/397631031\u0026#34; # - name: facebook # url: \u0026#34;https://www.facebook.com/profile.php?id=100027782410997\u0026#34; # - name: instagram # url: \u0026#34;img/instagram.png\u0026#34; # - name: QQ # url: \u0026#34;img/qq.png\u0026#34; # - name: Phone # url: \u0026#34;img/phone.png\u0026#34; # editPost: # URL: \u0026#34;https://github.com/adityatelange/hugo-PaperMod/tree/exampleSite/content\u0026#34; # Text: \u0026#34;Suggest Changes\u0026#34; # edit text # appendFilePath: true # to append file path to Edit link # label: # text: \u0026#34;Home\u0026#34; # icon: icon.png # iconHeight: 35 # analytics: # google: # SiteVerificationTag: \u0026#34;XYZabc\u0026#34; assets: favicon: \u0026#34;img/logo.gif\u0026#34; favicon16x16: \u0026#34;img/logo.gif\u0026#34; favicon32x32: \u0026#34;img/logo.gif\u0026#34; apple_touch_icon: \u0026#34;logo.gif\u0026#34; safari_pinned_tab: \u0026#34;logo.gif\u0026#34; disableFingerprinting: true # cover: # hidden: true # hide everywhere but not in structured data # hiddenInList: true # hide on list pages and home # hiddenInSingle: true # hide on single page fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 1 minMatchCharLength: 0 keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;] twikoo: version: 1.4.11 taxonomies: category: categories tag: tags series: series markup: goldmark: renderer: unsafe: true # HUGO 默认转义 Markdown 文件中的 HTML 代码，如需开启的话 highlight: # anchorLineNos: true codeFences: true guessSyntax: true lineNos: true # noClasses: false # style: monokai style: darcula # codeFences：代码围栏功能，这个功能一般都要设为 true 的，不然很难看，就是干巴巴的-代码文字，没有颜色。 # guessSyntax：猜测语法，这个功能建议设置为 true, 如果你没有设置要显示的语言则会自动匹配。 # hl_Lines：高亮的行号，一般这个不设置，因为每个代码块我们可能希望让高亮的地方不一样。 # lineNoStart：行号从编号几开始，一般从 1 开始。 # lineNos：是否显示行号，我比较喜欢显示，所以我设置的为 true. # lineNumbersInTable：使用表来格式化行号和代码,而不是 标签。这个属性一般设置为 true. # noClasses：使用 class 标签，而不是内嵌的内联样式 privacy: vimeo: disabled: false simple: true x: disabled: false enableDNT: true simple: true instagram: disabled: false simple: true youtube: disabled: false privacyEnhanced: true services: instagram: disableInlineCSS: true x: disableInlineCSS: true 2. 部署搜索页 在content文件夹中创建search.md并写入以下配置：\n1 2 3 4 5 6 7 8 --- title: \u0026#34;搜索\u0026#34; # in any language you want layout: \u0026#34;search\u0026#34; # is necessary # url: \u0026#34;/zh/search\u0026#34; # description: \u0026#34;Description for Search\u0026#34; summary: \u0026#34;search\u0026#34; placeholder: \u0026#34;搜索文章...\u0026#34; --- 你可以通过添加searchHidden: true来使得特定的文章不会被搜索到。\n3. 部署时间轴 在content文件夹中创建archive.md并写入以下配置：\n1 2 3 4 5 6 --- title: \u0026#34;时间轴\u0026#34; layout: \u0026#34;archives\u0026#34; url: \u0026#34;/zh/archives/\u0026#34; summary: archives --- 4. 部署标签页 以下为参考文档的原文摘录：\nPaperMod主题是支持多语言的，但是标签页不支持，需要修改对应的 html 模板。 主题提供的语言支持文件再themes/PaperMod/il8n里面，其中zh.yaml即简体中文。 为了防止更新主题时还原修改过的文件，需要在网站根目录进行修改，这样可以覆盖主题原有文件的效果。 4.1 覆盖默认翻译 在博客根目录下新建i18n/文件夹，复制themes/PaperMod/i18n/zh.yaml到i18n/zh.yaml。\n4.2 覆盖html模板 标签页对应的模板文件为themes/PaperMod/layouts/_default/terms.html，同以上步骤：在网站根目录新建layouts/_default/文件夹，复制themes/PaperMod/layouts/_default/terms.html到layouts/_default/terms.html，并写入下列配置：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 {{- define \u0026#34;main\u0026#34; }} {{- if .Title }} \u0026lt;header class=\u0026#34;page-header\u0026#34;\u0026gt; {{- if eq .Title \u0026#34;Categories\u0026#34; }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{- end }} {{- if eq .Title \u0026#34;Tags\u0026#34; }} \u0026lt;h1\u0026gt;{{ \u0026#34;标签\u0026#34; }}\u0026lt;/h1\u0026gt; \u0026lt;!-- \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; --\u0026gt; {{- end }} \u0026lt;!-- \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; --\u0026gt; {{- if .Description }} \u0026lt;div class=\u0026#34;post-description\u0026#34;\u0026gt; {{ .Description }} \u0026lt;/div\u0026gt; {{- end }} \u0026lt;/header\u0026gt; {{- end }} \u0026lt;!-- 原始 --\u0026gt; \u0026lt;ul class=\u0026#34;terms-tags\u0026#34;\u0026gt; {{- $type := .Type }} {{- range $key, $value := .Data.Terms.Alphabetical }} {{- $name := .Name }} {{- $count := .Count }} {{- with $.Site.GetPage (printf \u0026#34;/%s/%s\u0026#34; $type $name) }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Name }} \u0026lt;sup\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;sup\u0026gt;{{ $count }}\u0026lt;/sup\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/sup\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; {{- end }} {{- end }} \u0026lt;/ul\u0026gt; {{- end }}{{/* end main */ -}} 5. 自定义博客头 在文件夹 archetypes 中创建post.md 文件，并写入下列配置：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 --- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date: {{ .Date }} lastmod: {{ .Date }} author: [\u0026#34;AInfinity\u0026#34;] categories: - category 1 - category 2 tags: - tag 1 - tag 2 keywords: - word 1 - word 2 description: \u0026#34;\u0026#34; # 文章描述，与搜索优化相关 summary: \u0026#34;\u0026#34; # 文章简单描述，会展示在主页 weight: # 输入1可以顶置文章，用来给文章展示排序，不填就默认按时间排序 slug: \u0026#34;\u0026#34; draft: false # 是否为草稿 comments: true showToc: true # 显示目录 TocOpen: true # 自动展开目录 autonumbering: true # 目录自动编号 hidemeta: false # 是否隐藏文章的元信息，如发布日期、作者等 disableShare: true # 底部不显示分享栏 searchHidden: false # 该页面可以被搜索到 showbreadcrumbs: true #顶部显示当前路径 mermaid: true cover: image: \u0026#34;\u0026#34; caption: \u0026#34;\u0026#34; alt: \u0026#34;\u0026#34; relative: false --- 随后可利用该模板生成关于页面。在博客根目录下执行命令：\n1 hugo new --kind post content/about.md 6. 内容管理 以下内容摘自参考文档。\n我们写作的内容都是放在content目录下的，因此有必要对其内容有一个基本了解\n在官方文档 Content Management 中详尽地介绍了管理博客内容需要了解的所有信息，以下是我的一个目录结构，其中的 about.md、 archive.md 和 search.md 对应博客中的关于、时间轴和搜索：\n1 2 3 4 5 6 7 8 9 10 11 12 content ├── posts │ ├── _index.md │ ├── life │ │ └── _index.md │ ├── read │ │ └── _index.md │ └── tech │ └── _index.md ├── about.md ├── archive.md └── search.md 以上目录结构看到出现了很多_index.md,官方参考文档在此Index Pages 。简而言之，这个文件是作为自定义索引页存在。这里给出一个_index.md作为参考：\n1 2 3 4 5 6 7 8 9 10 --- title: \u0026#34;文章\u0026#34; # description: \u0026#34;静水流深。\u0026#34; hidemeta: true # 是否隐藏文章的元信息，如发布日期、作者等 --- 静水流深。 \u0026lt;!-- more --\u0026gt; 注意：根据个人博客具体分类将其生成到对应路径。\n至此，你的网站应该已经初步部署完毕。下一步，要想让大家看到你的网站，则应将其部署到公网上，即你的个人域名上。\n四 · 发布网站 本博客采用github pages托管，并利用CNAME部署到个人域名上，从而使得博客能够被公网访问。\n参考文档：保姆级教程：从零构建GitHub Pages静态网站\n1. 将博客托管至Github Pages 本部分需要你拥有Github账号。如无，请至Github官网注册。部分大陆地区裸连Github可能会有些慢，你或许需要科学上网。\n首先，创建一个新的repository，需要设置为public。建议选择不创建.readme文件。\n你的仓库需要命名为yourname.github.io。\n随后，进入仓库settings，在Build and deployment一栏中，确保Source为Deploy from a branch，Branch选择默认的master。这是为了你的push能够自动部署。\n在博客根目录打开CMD，输入hugo。该命令将会将你的博客编译为静态网站。\n随后，进入新生成的public文件夹，该文件夹存放了可用于部署的网站。\n1 cd public 初始化git仓库：\n1 git init 添加远程库：\n1 git remote add origin your-repository-name 新建commit：\n1 2 3 git add . git commit -m \u0026#34;feat: impl blog pages\u0026#34; git push --set-upstream origin master 随后打开你的repository，等待一到两分钟，应该可以发现Github已经自动部署该网站。你应当可以通过在浏览器中访问your-name.github.io来看到你的网站！\n2. 将博客部署到个人域名 本部分需要你拥有至少一个个人域名。如没有，你应当购买一个。购买审批流程一般在两到三天左右。\n一份教程：腾讯云域名注册及解析全方位指南\n在博客的public目录下，创建CNAME文件。在CNAME文件中写入你的域名名称，如https://ainfinitythecoder.cn。在当前路径打开CMD，随后新建commit提交更改。\n1 2 3 git add . git commit -m \u0026#34;chore: add CNAME from local\u0026#34; git push origin 此时，等待一到两分钟，Github Pages应该已经自动将网站部署到你的个人域名下。\n五 · 结语 🎆 恭喜你！你现在应该已经成功拥有了自己的个人博客！🎆\n我的第一篇博客是关于如何搭建博客的博客，因为我在搭建博客的过程中实在踩了太多坑。以后我将会在我的博客中连载各类技术问题，学习心得，以及踩坑经过。希望将博客构建成为一个知识库，记录我学习成长过程中的点点滴滴。\n感觉学习还是不能急功近利，慢慢来，一步一个脚印。善用搜索，善用大模型，独立解决问题，才是能真正学到东西的有效途径。\n静水流深。\n","permalink":"https://ainfinity-lilacdream.github.io/zh/posts/wondering/setup-a-personal-blog/","summary":"\u003c!-- more --\u003e\r\n\u003ch2 id=\"零--前言\"\u003e零 · 前言\u003c/h2\u003e\n\u003cp\u003e这是我的第一篇博客。因为学着搭建博客的时候踩了太多坑，特此来记录一下，尽可能清晰，也给后来人一个参考。\u003c/p\u003e\n\u003cp\u003e如标题，博客采用Hugo+PaperMod+github pages搭建。下面我将分步记录搭建过程，以及一些踩过的坑。\u003c/p\u003e","title":"使用Hugo+PaperMod+github pages搭建个人博客"}]